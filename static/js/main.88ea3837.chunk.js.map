{"version":3,"sources":["../node_modules/@visa/keyboard-instructions/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","logo.svg","KeyboardInstructions.js","App.js","reportWebVitals.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","KeyboardInstructions","props","elementRef","useRef","useEffect","current","isInteractive","hasCousinNavigation","disabled","uniqueID","geomType","groupName","chartTag","width","ref","convertRowToObject","row","attrs_map","name","value","App","useState","setViz","setSheet","vizContainer","shadowContainer","shouldRedrawWrapper","setRedrawWrapper","title","setParentSVGAccessibility","initTableau","chartType","fakeThis","ordinalAccessor","groupAccessor","valueAccessor","tooltipLabel","labelAccessor","labelTitle","dataLabel","svgParent","parentNode","initializeDescriptionRoot","rootEle","highestHeadingLevel","redraw","disableKeyNav","setAccessibilityController","node","description","includeKeyNames","dataKeys","scopeDataKeys","chartAccessors","options","hideTabs","height","onFirstInteractive","dashboardSheets","viz","getWorkbook","getActiveSheet","getWorksheets","dashboardSheetsData","getSummaryDataOptions","ignoreAliases","ignoreSelection","maxRows","innerSheet","getSummaryDataAsync","t","col_names","col_indexes","data","k","getColumns","length","getFieldName","push","j","len","getData","sort","a","b","Player","Game","drawShadowChart","window","tableau","Viz","sheet","shadowElements","select","append","attr","dedupData","d","newData","filter","i","stringD","JSON","stringify","findIndex","obj","dataBoundToGeometries","selectAll","shadowEnter","enter","shadowExit","exit","merge","_","on","event","target","selectMarksAsync","SelectionUpdateType","REPLACE","shadowFocus","clearSelectedMarksAsync","shadowUnfocus","each","_d","n","initializeElementAccess","setElementAccessID","setElementFocusHandler","remove","className","class","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","applyPolyfills","defineCustomElements"],"mappings":"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","file":"static/js/main.88ea3837.chunk.js","sourcesContent":["var map = {\n\t\"./keyboard-instructions.entry.js\": [\n\t\t25,\n\t\t5\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 21;\nmodule.exports = webpackAsyncContext;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useRef, useEffect } from 'react';\n\nconst KeyboardInstructions = (props) => {\n  const elementRef = useRef(null);\n\n  useEffect(() => {\n      if (elementRef.current) { \n        elementRef.current.isInteractive = props.isInteractive;\n        elementRef.current.hasCousinNavigation = props.hasCousinNavigation;\n        elementRef.current.disabled = props.disabled;    \n      }\n  }, []);\n\n  return <keyboard-instructions\n    uniqueID={'thisIsATest'}\n    geomType={'bar'}\n    groupName={'bar group'}\n    chartTag={'bar-chart'}\n    width={800}\n    ref={elementRef}\n></keyboard-instructions>;\n};\n\nexport default KeyboardInstructions;","import { useRef, useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport KeyboardInstructions from './KeyboardInstructions';\n\nimport { \n  initializeElementAccess,\n  setElementFocusHandler,\n  setElementAccessID,\n\n  initializeDescriptionRoot,\n  setAccessibilityController,\n  scopeDataKeys,\n  chartAccessors,\n  checkAccessFocus,\n  retainAccessFocus\n} from '@visa/visa-charts-utils';\nimport { select } from 'd3-selection';\n\nconst convertRowToObject = (row, attrs_map) => {\n  let o = {};\n  let name = \"\";\n  for (name in attrs_map) {\n    let id = attrs_map[name];\n    o[name] = row[id].value === \"%null%\" ? null : row[id].value;\n  }\n  return o;\n};\n\n\nconst App = () => {\n  const width = 1000;\n  const height = 827;\n  const [vizURL, setVizURL] = useState(\"https://public.tableau.com/views/CoinFlipGame-a11yversion/KeyboardNavTest?:language=en-US&:display_count=n&:origin=viz_share_link&:tabs=n\");\n  const [viz, setViz] = useState();\n  const [sheet, setSheet] = useState();\n  const vizContainer = useRef();\n  const shadowContainer = useRef();\n\n  const [shouldRedrawWrapper, setRedrawWrapper] = useState(true);\n  const title = 'Heads and Tails by Game';\n  const description = 'Shows two diverging bar charts for Dad and Daughter, by game, depicting the number of heads and tails flipped by each player.';  \n\n  // on initial load only we call initTableau function\n  useEffect(() => {\n    // on load we need to set the controller and initialize descriptions\n    setParentSVGAccessibility();\n    initTableau();\n  }, []);\n\n  // set up controller using utils\n  // left off here, trying to sort out if we can even just\n  // render the controller node with some fake props\n  const setParentSVGAccessibility = () => {\n    const chartType = 'bar-chart';\n    // here we mock the expected chart object since we are not using \n    // VCC, but only the accessibility controller\n    const fakeThis = {\n        ordinalAccessor: 'Game',\n        groupAccessor: 'Game',\n        valueAccessor: 'SUM(Number of Records)',\n        tooltipLabel: { \n          labelAccessor: ['Game', 'Player',  'SUM(Number of Records)', 'SUM(Heads)', 'SUM(Tails)'],\n          labelTitle: ['Game', 'Player', 'Coin Flips', 'Heads', 'Tails'],\n          // format: ['','','','']\n        },\n        dataLabel: {\n            labelAccessor: 'SUM(Number of Records)'\n        }\n    };\n    const svgParent = shadowContainer.current.parentNode.parentNode.parentNode;\n\n    initializeDescriptionRoot({\n        rootEle: svgParent,\n        geomType: 'bar',\n        title: title,\n        chartTag: chartType,\n        uniqueID: 'thisIsATest',\n        highestHeadingLevel: 'h5',\n        redraw: shouldRedrawWrapper, // needs to be flipped to false after initial draw\n        disableKeyNav: false\n        // groupName: 'line', // bar chart doesn't use this\n    });\n\n    // we can set this to false now that the instructions wrapper was initially drawn\n    setRedrawWrapper(false);\n\n    setAccessibilityController({\n      node: shadowContainer.current,\n      chartTag: chartType, // start by testing with bar-chart, may have to change this though\n      title: title,\n      description: description,\n      uniqueID: 'thisIsATest', // uuid.v4(),\n      geomType: 'bar',\n      includeKeyNames: true,\n      dataKeys: scopeDataKeys(fakeThis, chartAccessors, chartType),\n      groupAccessor: fakeThis.groupAccessor,\n      disableKeyNav: false\n      // groupName: 'node', // bar chart does not include these\n      // groupKeys: [], // bar chart does not include these\n      // nested: '', // bar chart does not include these\n      // recursive: true // bar chart does not include these\n    });\n  }\n  \n  const initTableau = () => {\n    const vizURL = \"https://public.tableau.com/views/CoinFlipGame-a11yversion/KeyboardNavTest?:language=en-US&:display_count=n&:origin=viz_share_link&:tabs=n\";\n    const options = {\n      hideTabs: true,\n      width: width,\n      height: height,\n      onFirstInteractive: () => {\n        const dashboard = viz.getWorkbook().getActiveSheet();\n        const dashboardSheets = dashboard.getWorksheets();\n        const dashboardSheetsData = [];\n        const getSummaryDataOptions = { \n          ignoreAliases: false,\n          ignoreSelection: false,\n          maxRows: 0\n        };\n\n        dashboardSheets.map(innerSheet => { \n          setSheet(innerSheet);\n          innerSheet.getSummaryDataAsync(getSummaryDataOptions).then((t) => {\n            // console.log('in getData()', innerSheet.getName(), t, t.getColumns(), t.getData());\n        \n            let col_names = [];\n            let col_indexes = {};\n            let data = [];\n        \n            //write column names to array\n            for (let k = 0; k < t.getColumns().length; k++) {\n              col_indexes[t.getColumns()[k].getFieldName()] = k;\n        \n              // write named array\n              col_names.push(t.getColumns()[k].getFieldName());\n            }\n            // console.log('columns', col_names, col_indexes);\n          \n            for (let j = 0, len = t.getData().length; j < len; j++) {\n              data.push(convertRowToObject(t.getData()[j], col_indexes));\n            }\n        \n            // we need to sort the data to get it in the right order\n            data.sort((a, b) => a.Player === b.Player ? +a.Game - +b.Game : a.Player - b.Player);\n\n            // log flat data for testing\n            // console.log('flat data', data);\n            dashboardSheetsData.push(data);\n\n            // initialize fake stuff based on data  \n            drawShadowChart(data, innerSheet);\n            // console.log('checking what we got', dashboard, dashboardSheets, dashboardSheetsData, shadowContainer.current);\n        });\n      });\n\n\n\n        // need to check what happens with automatic sized workbooks...\n        //console.log(activeSheet.getSize());\n        // if (activeSheet.getSize().maxSize) {\n        //   this.width = activeSheet.getSize().maxSize.width;\n        //   this.height = activeSheet.getSize().maxSize.height;\n        // } else {\n        //   this.width = 800;\n        //   this.height = 800;\n        // }\n\n        // this will set the frame size the maximum allowed by the viz\n        // need to vet whether this will be a problem with automatic vizzes however\n        // see note herein for dashboards as well...\n        // https://onlinehelp.tableau.com/current/api/js_api/en-us/JavaScriptAPI/js_api_sample_resize.html\n        // viz.setFrameSize(width, height + 100);\n\n        // add event listeners, have yet to be able to change chord from these though\n        // viz.addEventListener(window.tableau.TableauEventName.TAB_SWITCH, this.onTabSwitch);\n        // viz.addEventListener(window.tableau.TableauEventName.FILTER_CHANGE, this.onFilterChange);\n        // viz.addEventListener(window.tableau.TableauEventName.PARAMETER_VALUE_CHANGE, this.onParameterChange);\n        // viz.addEventListener(window.tableau.TableauEventName.MARKS_SELECTION, this.onMarkSelect);\n      }\n    };\n\n    // Tableau.Viz was erroring, so went back to window.tableau.Viz\n    const viz = new window.tableau.Viz(vizContainer.current, vizURL, options);\n    setViz(viz);\n  }\n\n  // currently this is only firing on mouseover, have to see how\n  // we fire hover events in util\n  const shadowFocus = (e, d, sheet) => {\n    // just for testing let's make em red\n    select(e.target).attr('fill', 'red');\n    // console.log('rect focused', e, d, sheet, viz);\n\n    // this causes an infinite loop\n    sheet.selectMarksAsync(\"ATTR(Game Level Aria ID)\", d[\"ATTR(Game Level Aria ID)\"], window.tableau.SelectionUpdateType.REPLACE);\n  }\n\n  const shadowUnfocus = (e, d, sheet) => {\n    // just for testing let's make em red\n    select(e.target).attr('fill', 'grey');\n    // console.log('rect focus removed', e, d, sheet, viz);\n\n    // this causes an infinite loop\n    sheet.clearSelectedMarksAsync();\n  }\n\n\n    // since we don't need constancy or anything I think we can just blow it up and redraw everytime. \n    const drawShadowChart = (data, sheet) => {\n      // console.log('drawShadowChart', data, sheet);\n      // create shadowChart\n        const shadowElements = select(shadowContainer.current).append('g').attr('class', 'bar-group');\n\n        // before we bind data, let's dedup what Tableau is sending us, probably a better way to do this\n        const dedupData = data.map(d => {\n          return { \n            Game: d.Game,\n            Player: d.Player,\n            ['SUM(Heads)']: d['SUM(Heads)'],\n            ['SUM(Number of Records)']: d['SUM(Number of Records)'],\n            ['SUM(Tails)']: d['SUM(Tails)'],\n            ['ATTR(Game Level Aria ID)']: d['ATTR(Game Level Aria ID)']\n          }\n        });\n\n        const newData = dedupData.filter((d, i) => { \n          const stringD = JSON.stringify(d);\n          return i === dedupData.findIndex(obj => JSON.stringify(obj) === stringD);\n        });\n  \n        // bind data\n        const dataBoundToGeometries = shadowElements.selectAll('.bar').data(newData, d => `${d['Game']}-${d['Player']}`);\n  \n        const shadowEnter = dataBoundToGeometries.enter().append('rect');\n        const shadowExit = dataBoundToGeometries.exit();\n        const shadowUpdate = dataBoundToGeometries.merge(shadowEnter);\n  \n        // initialize elements\n        shadowEnter\n          .attr('class', 'bar')\n          .attr('data-id', d => `${d['Game']}-${d['Player']}`)\n          .attr('height', 0.01)\n          .attr('width', 0.01)\n          .attr('x', (_, i) => 0)\n          .attr('y', (_, i) => 0)\n          .attr('fill', 'grey')\n          // .on('click', !this.suppressEvents ? d => this.onClickHandler(d) : null)\n          .on('mouseover', (event, d) => shadowFocus(event, d, sheet))\n          .on('mouseout', (event, d) => shadowUnfocus(event, d, sheet))\n          .each((_d, i, n) => {\n            // initialize tabindex, etc.\n            initializeElementAccess(n[i]);\n\n            // on the first element set the group stuff\n            if ( i === 0 ) { \n              initializeElementAccess(shadowElements.node());\n\n              shadowElements.each((_, i, n) => {\n                setElementAccessID({\n                  node: n[i],\n                  uniqueID: 'thisIsATest'\n                });\n              });\n            }\n  \n            // next we set the focus and ID of the fake DOM node\n            // this should set aria labels as well? \n            setElementFocusHandler({\n              node: n[i],\n              geomType: 'bar',\n              includeKeyNames: true, // tableauExt.settings.get('includeKeyNames'), // this.accessibility.includeDataKeyNames,\n              dataKeys: {\n                ['Game']: \"\",\n                ['Player']: \"\",\n                // ['SUM(Number of Records)']: '0.[0][0]a', \n                ['SUM(Heads)']: '0.[0][0]a',\n                ['SUM(Tails)']: '0.[0][0]a'\n              },\n              uniqueID: 'thisIsATest', // tableauExt.settings.get('uniqueID'), // this.chartID,\n              disableKeyNav: false \n                // this.suppressEvents &&\n                // this.accessibility.elementsAreInterface === false &&\n                // this.accessibility.keyboardNavConfig &&\n                // this.accessibility.keyboardNavConfig.disabled\n            });\n  \n            // give each element an id we can use for selection\n            setElementAccessID({\n              node: n[i],\n              uniqueID: 'thisIsATest', //  tableauExt.settings.get('uniqueID')\n            });\n  \n            // console.log('checking data', _d, n[i]);\n            // TODO: we also need to check whether we can write this back to our data array\n            // so that we can focus a specific element later on when selected in Tableau\n          });\n  \n          // if we need to we can remove elements no longer needed\n          shadowExit.remove();\n    }\n\n\n  return (\n    <div className=\"tableau-keyboard-navigation\">\n      <div className=\"o-layout\">\n        <div className=\"o-layout--chart\">\n          <KeyboardInstructions\n             uniqueID={'thisIsATest'}\n             geomType={'bar'}\n             groupName={'bar group'}\n             chartTag={'bar-chart'}\n             width={800}\n             isInteractive={true}\n             hasCousinNavigation={true}\n             disabled={false}\n          />\n          <div class=\"shadow-d3-viz-conatiner\">\n            <svg ref={shadowContainer} height={1} width={1} />\n          </div>\n        </div>\n      </div>\n      <div ref={vizContainer} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { applyPolyfills, defineCustomElements } from '@visa/keyboard-instructions/dist/loader';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\napplyPolyfills().then(() => { \n  defineCustomElements();\n});\n"],"sourceRoot":""}